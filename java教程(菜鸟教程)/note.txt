

第一个java程序

注：String args[]与String[]　args都可以执行，但是土建后者

javac t1.java
java t1

执行命令解析　　用到了两个命令: javac 和java

javac　后面跟着java文件的文件名，例如，t1.java．该命名用于将java源文件编译为class字节码文件，

运行javac命令后，如果成功编译没有错误的话，会出现一个t1.class文件

java后面跟着的是java文件中的类名，流入,t1是类名，

注意:java命令后面不要加.class

 
java简介

java分为三个体系:
1. JavaSE(J2SE)  java平台标准版
2. JavaEE（J2EE）  java平台企业版
3. JavaME(JME)  java平台微型版

主要特性

1. java语言是简单的

java的语法与c++接近，但是丢弃了c++的一些特性．java语言不使用指针，而是引用．并提供了自动的
废料收集，使得程序员不必为内存管理而担忧

２．　java是面向对象的

java提供类，接口和继承等面向对象的特性．只支持类之间的单继承，但支持接口之间的多继承，并支持
类与接口之间的实现机制(关键字为implements)java语言全面支持动态绑定，而c++语言值对虚函数
使用动态绑定．总之，java语言是一个纯的面向对象程序设计语言

３．java语言是分布式的

java语言支持Internet应用的开发，在基本的java应用编程接口中有一个网络应用编程接口(java net)
它提供了用于网络应用编程的类库,包括URL等．
java的RMI(远程方法激活)机制也是开发分布式应用的重要手段


4. java语言是健壮的
jav的强类型机制，异常处理，垃圾的自动收集等是java程序健壮性的重要保证．
对指针的丢弃是java的明智选择．java的安全检查机制使得java更具健壮性

５．java语言是安全的

java通常被用在网络环境中，为此，java提供了一个安全机制以防止恶意代码的攻击．除了java语言具有的
许多安全特性之外，java对通过网络下载的类具有一个安全防范机制(类ClassLoader),如分配不同的名字的
名字空间以防替代本地的同名类，字节代码检查，并提供安全管理机制(类SecurityManager)让
java应用设置安全哨兵

6. java语言是体系结构中立的

java程序(后缀为java的文件)在java平台上被编译为体系结构中立的字节码格式(后缀为class的文件)
，然后可以在实现这个java平台的任何系统中运行．这种途径适合于异构的网络环境和软件的分发

７．　java语言是可移植的

这种可移植型来源于体系结构中立性，另外，java还严格规定了各个基本数据类型的长度．java系统本身
也有很强的可移植性，java编译器是用java实现的，java的运行环境使用ANSI C实现的


8.  java语言是解释型的

java程序在java平台上被编译为字节码格式，然后可以在实现这个java平台的任何系统中运行．在运行时
java平台中的java解释器对这些字节码进行解释执行，执行过程中需要的类在联结阶段被载入到运行环境中

9.java是高性能的

与那些解释型的高级脚本语言相比，java的确是高性能的．事实上，java的运行速度随着JIT(Just-In-Time)
编译器技术的发展越来越接近与Ｃ++

10. java语言是多线程的

在java语言中，线程是一种特殊的对象，它必须由Thread类或其子(孙)类来创建．通常有两种方法来创建
线程:其一，使用型构为Thread(Runnable)的构造子将一个实现了Runnable接口的对象包装成一个线程，
其二，从Thread类派生出子类或重写run方法，使用该子类创建的对象即为线程．
注意，Thread类已经实现了Runnable接口，因此，任何一个线程均有它的run方法，而run方法中包含了
线程索要运行的代码．线程的活动一组方法来控制．java语言支持多个线程的同时执行，并提供多线程
之间的同步机制(关键字为synchronized)


11. java语言是动态的

java语言的设计目标之一是适应于动态变化的环境．java程序需要的类能够动态地被载入到运行环境，也可以
听过网络来载入需要的类，这也有利于软件的升级．另外，java中的类有一个运行时刻的表示，能进行运行时刻
的类型检查


发展历史


Java 开发环境配置